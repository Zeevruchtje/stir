//  Stir v0.10
//  Licensed under MIT
//
//  Author: Rick
//  Website: https://stir.rickvanzee.nl

/* Stir start */

@charset "UTF-8";

@import 'functions';
@import 'variables';
@import 'mixins';

// --------------
// Base styling
// --------------

html {
    height: 100%;
}

body {
    margin: 0;
    min-height: 100%;

    // Prevent any horizontal scrollbars, which could happen when you have
    // a grid in a container where the gap size of the container is smaller
    // than the grid's
    overflow-x: hidden;
}

*, *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

@if $enable-typography {
    @if has-value($font-size-unit, (em, rem)) == false {
        @error 'The variable $font-size-unit must either be em or rem';
    }

    html {
        font-size: $default-font-size;
    }

    body {
        font-size: 1rem;
    }

    @include _heading-scaling($font-scale-ratio);
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

input[type="submit"], input[type="button"], button, .btn {
    display: inline-block;
    border-radius: 0;

    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

// --------------
// Wrappers
// --------------

// @include _containers($include-base-styling: true);
.container {
    position: static;
    display: block;

    max-width: $max-container-width;
    width: 100%;

    padding-right: $default-column-gap;
    padding-left: $default-column-gap;
    margin-right: auto;
    margin-left: auto;
}

@include _grids($include-base-styling: true);

.block, .block-top, .block-bottom {
    position: static;
    display: block;
}

.block {
    padding-bottom: $block-padding;
    padding-top: $block-padding;
}

.block-top {
    padding-top: $block-padding;
}

.block-bottom {
    padding-bottom: $block-padding;
}

.clear {
    &:after {
        display: table;
        content: " ";
        clear: both;
    }
}

// --------------
// Columns
// --------------

@include _columns($include-base-styling: true);
@include _column-gaps();
@include _column-clears();

// @if not empty($responsivity) {
//     @include above(nth(map-keys(sort-by-columns($responsivity, breakpoint, 'descending')), 1)) {
//         @include _auto-columns();
//     }
// }
// @else {
//     @include _auto-columns();
// }

// --------------
// Helpers
// --------------

@include _floats();
@include _visibility-classes();

%no-margin-top {
    margin-top: 0;
}

%no-margin-bottom {
    margin-bottom: 0;
}

@each $tag in h1, h2, h3, h4, h5, h6, p, span, strong, ul, ol, hr, del, ins, table, sub, sup {
    .textual > #{$tag}:first-child, .rtextual #{$tag}:first-child, .textual-top > #{$tag}:first-child, .rtextual-top #{$tag}:first-child {
        @extend %no-margin-top;
    }
    .textual > #{$tag}:last-child, .rtextual #{$tag}:last-child, .textual-bottom > #{$tag}:last-child, .rtextual-bottom #{$tag}:last-child {
        @extend %no-margin-bottom;
    }
}

.rtrim-top, .rtrim {
    :first-child {
        @extend %no-margin-top;
    }
}

.rtrim-bottom, .rtrim {
    :last-child {
        @extend %no-margin-bottom;
    }
}

.trim-top, .trim {
    > :first-child {
        @extend %no-margin-top;
    }
}

.trim-bottom, .trim {
    > :last-child {
        @extend %no-margin-bottom;
    }
}

.bg-cover {
    background-position: center center;
    background-repeat: no-repeat;
    background-size: 100% 100%;

    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

.overlay {
    position: absolute;

    bottom: 0;
    right: 0;
    left: 0;
    top: 0;
}

.inner-overlay {
    position: absolute;

    right: $default-column-gap;
    left: $default-column-gap;
    bottom: 0;
    top: 0;
}

.rel {
    position: relative;
}

.rel-height {
    position: relative;
    display: block;

    &:before {
        padding-bottom: $default-rel-height;
        display: block;
        content: ' ';
    }

    > * {
        @extend .overlay;
    }
}

.round {
    border-radius: 99999px;
}

// --------------
// Media queries
// --------------

$sorted-responsivity: sort-by-columns($responsivity, breakpoint, 'descending');

@each $char in map-keys($sorted-responsivity) {
    $item: _get-transformed-breakpoint-item($char);

    // If this item is a container jump set the container width to the
    // container width of the next item
    @if map-get($item, 'container-jump') and map-after($sorted-responsivity, $char) {
        $followup-item: _get-transformed-breakpoint-item(map-after($sorted-responsivity, $char, true));
        $item: map-set($item, 'container-width', map-get($followup-item, 'container-width'));
    }

    // @include media-query($char, map-after($sorted-responsivity, $char, true)) {
    //     @include _auto-columns($char);
    // }

    @include below($char) {
        [class^="container"], [class*=" container"] {
            &:not(.no-jump) {
                max-width: map-get($item, 'container-width');
            }
        }

        @if $enable-typography {
            @if map-get($item, 'font-size') {
                html {
                    font-size: map-get($item, 'font-size');
                }
            }

            @if map-get($item, 'font-scale-ratio') {
                @include _heading-scaling(map-get($item, 'font-scale-ratio'));
            }
        }

        @include _floats($char);
        // @include _containers($char);
        @include _grids($char);
        @include _columns($char);
        @include _column-gaps($char);
        @include _column-clears($char);
        @include _visibility-classes($char);
    }
}

/* Stir end */
